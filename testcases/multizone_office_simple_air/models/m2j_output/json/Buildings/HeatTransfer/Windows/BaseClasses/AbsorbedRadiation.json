{
  "within": "Buildings.HeatTransfer.Windows.BaseClasses",
  "class_definition": [
    {
      "class_prefixes": "block",
      "class_specifier": {
        "long_class_specifier": {
          "identifier": "AbsorbedRadiation",
          "description_string": "Absorbed radiation by window",
          "composition": {
            "element_list": [
              {
                "extends_clause": {
                  "name": "Buildings.HeatTransfer.Windows.BaseClasses.PartialRadiation"
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "HRoo",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"RadiantEnergyFluenceRate\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"W/m2\""
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Diffussive radiation from room ",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": -140,
                                        "y": -100
                                      },
                                      {
                                        "x": -100,
                                        "y": -60
                                      }
                                    ]
                                  },
                                  "iconTransformation": {
                                    "extent": [
                                      {
                                        "x": -130,
                                        "y": -91
                                      },
                                      {
                                        "x": -100,
                                        "y": -61
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealOutput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "QAbsExtSha_flow",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "NSta"
                            }
                          }
                        ],
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "final": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"Power\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "final": true,
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"W\""
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Absorbed interior and exterior radiation by exterior shading device",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": 70
                                      },
                                      {
                                        "x": 120,
                                        "y": 90
                                      }
                                    ]
                                  },
                                  "iconTransformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": 70
                                      },
                                      {
                                        "x": 120,
                                        "y": 90
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealOutput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "QAbsIntSha_flow",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "NSta"
                            }
                          }
                        ],
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "final": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"Power\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "final": true,
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"W\""
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Absorbed interior and exterior radiation by interior shading device",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": -90
                                      },
                                      {
                                        "x": 120,
                                        "y": -70
                                      }
                                    ]
                                  },
                                  "iconTransformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": -90
                                      },
                                      {
                                        "x": 120,
                                        "y": -70
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealOutput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "QAbsGlaUns_flow",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "N"
                            }
                          },
                          {
                            "expression": {
                              "simple_expression": "NSta"
                            }
                          }
                        ],
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"Power\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "final": true,
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"W\""
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Absorbed interior and exterior radiation by unshaded part of glass",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": 30
                                      },
                                      {
                                        "x": 120,
                                        "y": 50
                                      }
                                    ]
                                  },
                                  "iconTransformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": 30
                                      },
                                      {
                                        "x": 120,
                                        "y": 50
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealOutput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "QAbsGlaSha_flow",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "N"
                            }
                          },
                          {
                            "expression": {
                              "simple_expression": "NSta"
                            }
                          }
                        ],
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"Power\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "final": true,
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"W\""
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Absorbed interior and exterior radiation by shaded part of glass",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": -50
                                      },
                                      {
                                        "x": 120,
                                        "y": -30
                                      }
                                    ]
                                  },
                                  "iconTransformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": -50
                                      },
                                      {
                                        "x": 120,
                                        "y": -30
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "output",
                  "type_specifier": "Modelica.Units.SI.Power",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "absRad",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "2"
                            }
                          },
                          {
                            "expression": {
                              "simple_expression": "N +2"
                            }
                          },
                          {
                            "expression": {
                              "simple_expression": "NSta"
                            }
                          }
                        ]
                      },
                      "description": {
                        "description_string": "Absorbed interior and exterior radiation.\n      (absRad[2,1,iSta]: exterior shading device,\n      absRad[1,2 to N+1,iSta]: glass (unshaded part),\n      absRad[2,2 to N+1,iSta]: glass (shaded part),\n      absRad[2,N+2,iSta]: interior shading device)\n      with iSta being the state of the (electrochromic) window"
                      }
                    }
                  ]
                }
              }
            ],
            "element_sections": [
              {
                "protected_element_list": [
                  {
                    "final": true,
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Integer",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "NDIR",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "radDat.NDIR"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Number of incident angles"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "final": true,
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Integer",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "HEM",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "radDat.HEM"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Index of hemispherical integration"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "constant",
                      "type_specifier": "Integer",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "NoShade",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "1"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Index for data for no shade"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "constant",
                      "type_specifier": "Integer",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "Shade",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "2"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Index for data with shade"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "final": true,
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "coeAbsEx",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "2"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "radDat.N"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "radDat.HEM +2"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "NSta"
                                }
                              }
                            ],
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "each": true,
                                    "element_modification": {
                                      "name": "fixed",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "false"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "final": true,
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "coeRefExtPan1",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "radDat.HEM +2"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "NSta"
                                }
                              }
                            ],
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "each": true,
                                    "element_modification": {
                                      "name": "fixed",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "false"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Reflectivity of pane 1"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "final": true,
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "coeAbsIn",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "2"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "radDat.N"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "NSta"
                                }
                              }
                            ],
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "each": true,
                                    "element_modification": {
                                      "name": "fixed",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "false"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "final": true,
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "coeAbsDevExtIrrIntSha",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "radDat.HEM +2"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "NSta"
                                }
                              }
                            ],
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "each": true,
                                    "element_modification": {
                                      "name": "fixed",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "false"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity of interior shading device for exterior radiation"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "final": true,
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "coeAbsDevExtIrrExtSha",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "1 -radDat.traRefShaDev[1,1] -radDat.traRefShaDev[2,1]"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity of exterior shading device for exterior radiation"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "final": true,
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "coeAbsDevIntIrrIntSha",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NSta"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "radDat.devAbsIntIrrIntSha"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity of interior shading device for interior radiation"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "final": true,
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "coeAbsDevIntIrrExtSha",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NSta"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "for_loop": {
                                    "expression": {
                                      "simple_expression": "1 -radDat.winTraRefIntIrrExtSha[1,iSta] -radDat.winTraRefIntIrrExtSha[2,iSta]"
                                    },
                                    "for_loop": [
                                      {
                                        "name": "iSta",
                                        "range": "1:NSta"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity of exterior shading device for interior radiation"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "x"
                          },
                          "description": {
                            "description_string": "Intermediate variable, x=(index-1)*incAng/(0.5pi)+2, 0<=x<=NDIR"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "incAng2"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "equation_section": {
                  "initial": true,
                  "equation": [
                    {
                      "for_equation": {
                        "for_indices": [
                          {
                            "identifier": "i",
                            "expression": {
                              "simple_expression": "1:N"
                            }
                          }
                        ],
                        "loop_equations": [
                          {
                            "assignment_equation": {
                              "lhs": "coeAbsIn[NoShade,i,1:NSta]",
                              "rhs": {
                                "simple_expression": "radDat.absIntIrrNoSha[i,1:NSta]"
                              }
                            }
                          },
                          {
                            "if_equation": {
                              "if_elseif": [
                                {
                                  "condition": {
                                    "simple_expression": "haveInteriorShade"
                                  },
                                  "then": [
                                    {
                                      "equation": {
                                        "assignment_equation": {
                                          "lhs": "coeAbsIn[Shade,i,1:NSta]",
                                          "rhs": {
                                            "simple_expression": "radDat.absIntIrrIntSha[i,1:NSta]"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "condition": {
                                    "simple_expression": "haveExteriorShade"
                                  },
                                  "then": [
                                    {
                                      "equation": {
                                        "assignment_equation": {
                                          "lhs": "coeAbsIn[Shade,i,1:NSta]",
                                          "rhs": {
                                            "simple_expression": "radDat.absIntIrrExtSha[i,1:NSta]"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              ],
                              "else_equation": [
                                {
                                  "assignment_equation": {
                                    "lhs": "coeAbsIn[Shade,i,1:NSta]",
                                    "rhs": {
                                      "simple_expression": {
                                        "function_call": {
                                          "name": "zeros",
                                          "arguments": [
                                            {
                                              "name": "NSta"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "for_equation": {
                              "for_indices": [
                                {
                                  "identifier": "j",
                                  "expression": {
                                    "simple_expression": "1:HEM"
                                  }
                                }
                              ],
                              "loop_equations": [
                                {
                                  "assignment_equation": {
                                    "lhs": "coeAbsEx[NoShade,i,j +1,1:NSta]",
                                    "rhs": {
                                      "simple_expression": "radDat.absExtIrrNoSha[i,j,1:NSta]"
                                    }
                                  }
                                },
                                {
                                  "if_equation": {
                                    "if_elseif": [
                                      {
                                        "condition": {
                                          "simple_expression": "haveInteriorShade"
                                        },
                                        "then": [
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "coeAbsEx[Shade,i,j +1,1:NSta]",
                                                "rhs": {
                                                  "simple_expression": "radDat.absExtIrrIntSha[i,j,1:NSta]"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "condition": {
                                          "simple_expression": "haveExteriorShade"
                                        },
                                        "then": [
                                          {
                                            "equation": {
                                              "assignment_equation": {
                                                "lhs": "coeAbsEx[Shade,i,j +1,1:NSta]",
                                                "rhs": {
                                                  "simple_expression": "radDat.absExtIrrExtSha[i,j,1:NSta]"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "else_equation": [
                                      {
                                        "assignment_equation": {
                                          "lhs": "coeAbsEx[Shade,i,j +1,1:NSta]",
                                          "rhs": {
                                            "simple_expression": {
                                              "function_call": {
                                                "name": "zeros",
                                                "arguments": [
                                                  {
                                                    "name": "NSta"
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "for_equation": {
                              "for_indices": [
                                {
                                  "identifier": "k",
                                  "expression": {
                                    "simple_expression": "NoShade:Shade"
                                  }
                                }
                              ],
                              "loop_equations": [
                                {
                                  "assignment_equation": {
                                    "lhs": "coeAbsEx[k,i,1,1:NSta]",
                                    "rhs": {
                                      "simple_expression": "coeAbsEx[k,i,2,1:NSta]"
                                    }
                                  }
                                },
                                {
                                  "assignment_equation": {
                                    "lhs": "coeAbsEx[k,i,HEM +2,1:NSta]",
                                    "rhs": {
                                      "simple_expression": "coeAbsEx[k,i,HEM +1,1:NSta]"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "for_equation": {
                        "for_indices": [
                          {
                            "identifier": "j",
                            "expression": {
                              "simple_expression": "1:HEM"
                            }
                          }
                        ],
                        "loop_equations": [
                          {
                            "assignment_equation": {
                              "lhs": "coeRefExtPan1[j +1,1:NSta]",
                              "rhs": {
                                "simple_expression": "radDat.traRef[2,1,N,j,1:NSta]"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "for_equation": {
                        "for_indices": [
                          {
                            "identifier": "j",
                            "expression": {
                              "simple_expression": "1:HEM"
                            }
                          }
                        ],
                        "loop_equations": [
                          {
                            "assignment_equation": {
                              "lhs": "coeAbsDevExtIrrIntSha[j +1,1:NSta]",
                              "rhs": {
                                "simple_expression": "radDat.devAbsExtIrrIntShaDev[j,1:NSta]"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "coeRefExtPan1[1,1:NSta]",
                        "rhs": {
                          "simple_expression": "coeRefExtPan1[2,1:NSta]"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "coeRefExtPan1[HEM +2,1:NSta]",
                        "rhs": {
                          "simple_expression": "coeRefExtPan1[HEM +1,1:NSta]"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "coeAbsDevExtIrrIntSha[1,1:NSta]",
                        "rhs": {
                          "simple_expression": "coeAbsDevExtIrrIntSha[2,1:NSta]"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "coeAbsDevExtIrrIntSha[HEM +2,1:NSta]",
                        "rhs": {
                          "simple_expression": "coeAbsDevExtIrrIntSha[HEM +1,1:NSta]"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "algorithm_section": {
                  "statement": [
                    {
                      "assignment_statement": {
                        "identifier": [
                          {
                            "dot_op": false,
                            "identifier": "absRad",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NoShade"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "1"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "1:NSta"
                                }
                              }
                            ]
                          }
                        ],
                        "value": {
                          "simple_expression": {
                            "function_call": {
                              "name": "zeros",
                              "arguments": [
                                {
                                  "name": "NSta"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "assignment_statement": {
                        "identifier": [
                          {
                            "dot_op": false,
                            "identifier": "absRad",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NoShade"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "N +2"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "1:NSta"
                                }
                              }
                            ]
                          }
                        ],
                        "value": {
                          "simple_expression": {
                            "function_call": {
                              "name": "zeros",
                              "arguments": [
                                {
                                  "name": "NSta"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "assignment_statement": {
                        "identifier": [
                          {
                            "dot_op": false,
                            "identifier": "absRad",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "Shade"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "1"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "1:NSta"
                                }
                              }
                            ]
                          }
                        ],
                        "value": {
                          "simple_expression": {
                            "function_call": {
                              "name": "zeros",
                              "arguments": [
                                {
                                  "name": "NSta"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "assignment_statement": {
                        "identifier": [
                          {
                            "dot_op": false,
                            "identifier": "absRad",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "Shade"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "N +2"
                                }
                              },
                              {
                                "expression": {
                                  "simple_expression": "1:NSta"
                                }
                              }
                            ]
                          }
                        ],
                        "value": {
                          "simple_expression": {
                            "function_call": {
                              "name": "zeros",
                              "arguments": [
                                {
                                  "name": "NSta"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "for_statement": {
                        "for_indices": [
                          {
                            "identifier": "i",
                            "expression": {
                              "simple_expression": "1:N"
                            }
                          }
                        ],
                        "loop_statements": [
                          {
                            "assignment_statement": {
                              "identifier": [
                                {
                                  "dot_op": false,
                                  "identifier": "absRad",
                                  "array_subscripts": [
                                    {
                                      "expression": {
                                        "simple_expression": "NoShade"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "simple_expression": "i +1"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "simple_expression": "1:NSta"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "value": {
                                "simple_expression": "AWin*(1 -uSha_internal)*(HDif*coeAbsEx[NoShade,i,HEM +1,1:NSta] +HRoo*coeAbsIn[NoShade,i,1:NSta])"
                              }
                            }
                          },
                          {
                            "assignment_statement": {
                              "identifier": [
                                {
                                  "dot_op": false,
                                  "identifier": "absRad",
                                  "array_subscripts": [
                                    {
                                      "expression": {
                                        "simple_expression": "Shade"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "simple_expression": "i +1"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "simple_expression": "1:NSta"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "value": {
                                "simple_expression": "AWin*uSha_internal*(HDif*coeAbsEx[Shade,i,HEM +1,1:NSta] +HRoo*coeAbsIn[Shade,i,1:NSta])"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "for_statement": {
                        "for_indices": [
                          {
                            "identifier": "iSta",
                            "expression": {
                              "simple_expression": "1:NSta"
                            }
                          }
                        ],
                        "loop_statements": [
                          {
                            "if_statement": {
                              "if_elseif": [
                                {
                                  "condition": {
                                    "simple_expression": "haveExteriorShade"
                                  },
                                  "then": [
                                    {
                                      "assignment_statement": {
                                        "identifier": [
                                          {
                                            "dot_op": false,
                                            "identifier": "absRad",
                                            "array_subscripts": [
                                              {
                                                "expression": {
                                                  "simple_expression": "Shade"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "simple_expression": "1"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "simple_expression": "iSta"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "value": {
                                          "simple_expression": "AWin*uSha_internal*coeAbsDevExtIrrExtSha*(HDif +HDir +HDif*radDat.traRefShaDev[1,1]*radDat.traRef[2,1,N,HEM,iSta])"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "condition": {
                                    "simple_expression": "haveInteriorShade"
                                  },
                                  "then": [
                                    {
                                      "assignment_statement": {
                                        "identifier": [
                                          {
                                            "dot_op": false,
                                            "identifier": "absRad",
                                            "array_subscripts": [
                                              {
                                                "expression": {
                                                  "simple_expression": "Shade"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "simple_expression": "N +2"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "simple_expression": "iSta"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "value": {
                                          "simple_expression": "AWin*uSha_internal*(HDif*radDat.devAbsExtIrrIntShaDev[HEM,iSta] +HRoo*coeAbsDevIntIrrIntSha[iSta])"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "assignment_statement": {
                        "identifier": [
                          {
                            "dot_op": false,
                            "identifier": "incAng2"
                          }
                        ],
                        "value": {
                          "simple_expression": {
                            "function_call": {
                              "name": "min",
                              "arguments": [
                                {
                                  "name": "incAng"
                                },
                                {
                                  "name": "0.5*Modelica.Constants.pi"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "assignment_statement": {
                        "identifier": [
                          {
                            "dot_op": false,
                            "identifier": "x"
                          }
                        ],
                        "value": {
                          "simple_expression": "2*(NDIR -1)*abs(incAng2)/Modelica.Constants.pi +2"
                        }
                      },
                      "description": {
                        "description_string": "x=(index-1)*incAng/(0.5pi)+2, 0<=x<=NDIR"
                      }
                    },
                    {
                      "for_statement": {
                        "for_indices": [
                          {
                            "identifier": "i",
                            "expression": {
                              "simple_expression": "1:N"
                            }
                          }
                        ],
                        "loop_statements": [
                          {
                            "for_statement": {
                              "for_indices": [
                                {
                                  "identifier": "iSta",
                                  "expression": {
                                    "simple_expression": "1:NSta"
                                  }
                                }
                              ],
                              "loop_statements": [
                                {
                                  "assignment_statement": {
                                    "identifier": [
                                      {
                                        "dot_op": false,
                                        "identifier": "absRad",
                                        "array_subscripts": [
                                          {
                                            "expression": {
                                              "simple_expression": "NoShade"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "simple_expression": "i +1"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "simple_expression": "iSta"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "value": {
                                      "simple_expression": "absRad[NoShade,i +1,iSta] +AWin*HDir*(1 -uSha_internal)*Buildings.HeatTransfer.Windows.BaseClasses.smoothInterpolation({coeAbsEx[NoShade,i,k,iSta] for k in 1:(HEM +2)},x)"
                                    }
                                  }
                                },
                                {
                                  "assignment_statement": {
                                    "identifier": [
                                      {
                                        "dot_op": false,
                                        "identifier": "absRad",
                                        "array_subscripts": [
                                          {
                                            "expression": {
                                              "simple_expression": "Shade"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "simple_expression": "i +1"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "simple_expression": "iSta"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "value": {
                                      "simple_expression": "absRad[Shade,i +1,iSta] +AWin*HDir*uSha_internal*Buildings.HeatTransfer.Windows.BaseClasses.smoothInterpolation({coeAbsEx[Shade,i,k,iSta] for k in 1:(HEM +2)},x)"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_statement": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "haveInteriorShade"
                            },
                            "then": [
                              {
                                "for_statement": {
                                  "for_indices": [
                                    {
                                      "identifier": "iSta",
                                      "expression": {
                                        "simple_expression": "1:NSta"
                                      }
                                    }
                                  ],
                                  "loop_statements": [
                                    {
                                      "assignment_statement": {
                                        "identifier": [
                                          {
                                            "dot_op": false,
                                            "identifier": "absRad",
                                            "array_subscripts": [
                                              {
                                                "expression": {
                                                  "simple_expression": "Shade"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "simple_expression": "N +2"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "simple_expression": "iSta"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "value": {
                                          "simple_expression": "absRad[Shade,N +2,iSta] +AWin*HDir*uSha_internal*Buildings.HeatTransfer.Windows.BaseClasses.smoothInterpolation({coeAbsDevExtIrrIntSha[k,iSta] for k in 1:(HEM +2)},x)"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "if_statement": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "haveExteriorShade"
                            },
                            "then": [
                              {
                                "for_statement": {
                                  "for_indices": [
                                    {
                                      "identifier": "iSta",
                                      "expression": {
                                        "simple_expression": "1:NSta"
                                      }
                                    }
                                  ],
                                  "loop_statements": [
                                    {
                                      "assignment_statement": {
                                        "identifier": [
                                          {
                                            "dot_op": false,
                                            "identifier": "absRad",
                                            "array_subscripts": [
                                              {
                                                "expression": {
                                                  "simple_expression": "Shade"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "simple_expression": "1"
                                                }
                                              },
                                              {
                                                "expression": {
                                                  "simple_expression": "iSta"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "value": {
                                          "simple_expression": "absRad[Shade,1,iSta] +AWin*HDir*uSha_internal*coeAbsDevExtIrrExtSha*Buildings.HeatTransfer.Windows.BaseClasses.smoothInterpolation({coeRefExtPan1[k,iSta] for k in 1:(HEM +2)},x)"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "assignment_statement": {
                        "identifier": [
                          {
                            "dot_op": false,
                            "identifier": "QAbsExtSha_flow",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "1:NSta"
                                }
                              }
                            ]
                          }
                        ],
                        "value": {
                          "simple_expression": "absRad[2,1,1:NSta]"
                        }
                      }
                    },
                    {
                      "assignment_statement": {
                        "identifier": [
                          {
                            "dot_op": false,
                            "identifier": "QAbsIntSha_flow",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "1:NSta"
                                }
                              }
                            ]
                          }
                        ],
                        "value": {
                          "simple_expression": "absRad[2,N +2,1:NSta]"
                        }
                      }
                    },
                    {
                      "assignment_statement": {
                        "identifier": [
                          {
                            "dot_op": false,
                            "identifier": "QAbsGlaUns_flow",
                            "array_subscripts": [
                              {
                                "colon_op": true
                              },
                              {
                                "expression": {
                                  "simple_expression": "1:NSta"
                                }
                              }
                            ]
                          }
                        ],
                        "value": {
                          "simple_expression": "absRad[1,2:N +1,1:NSta]"
                        }
                      }
                    },
                    {
                      "assignment_statement": {
                        "identifier": [
                          {
                            "dot_op": false,
                            "identifier": "QAbsGlaSha_flow",
                            "array_subscripts": [
                              {
                                "colon_op": true
                              },
                              {
                                "expression": {
                                  "simple_expression": "1:NSta"
                                }
                              }
                            ]
                          }
                        ],
                        "value": {
                          "simple_expression": "absRad[2,2:N +1,1:NSta]"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "annotation": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Documentation",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "info",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<p>\nThe model calculates absorbed solar radiation on the window.\nThe calculations follow the description in Wetter (2004), Appendix A.4.3.\n</p>\n<p>\nThe absorbed radiation by exterior shades includes:\n</p>\n<ol>\n<li>\nthe directly absorbed exterior radiation: <code>AWin*uSha*(HDir+HDif)*(1-tau-rho)</code>\n</li>\n<li>\nthe indirectly absorbed exterior radiantion from reflection (angular part): <code>AWin*uSha*HDir*tau*rho(IncAng)*(1-tau-rho)</code>\n</li>\n<li>\nthe indirectly absorbed of exterior irradiantion from reflection (diffusive part): <code>AWin*uSha*HDif*tau*rho(HEM)*(1-tau-rho)</code>\n</li>\n<li>\nthe absorbed interior radiation is neglected.\n</li>\n</ol>\n<p>\nThe output is <code>absRad[2, 1]</code>\n</p>\n\n<p>\nThe absorbed radiation by interior shades includes:\n</p>\n<ol>\n<li>\nthe absorbed exterior radiation (angular part): <code>AWin*uSha*HDir*alpha(IncAng)</code>\n</li>\n<li>\nthe absorbed exterior radiation (diffusive part): <code>AWin*uSha*HDif*alpha(HEM)</code>\n</li>\n<li>\nthe absorbed interior radiation (diffusive part): <code>AWin*uSha*HRoo*(1-tau-rho)</code>\n</li>\n</ol>\n<p>\nThe output is <code>absRad[2, N+2]</code>\n</p>\n\n<p>\nThe absorbed radiation by glass includes:\n</p>\n<ol>\n<li>\nthe absorbed radiation by unshaded part (diffusive part): <code>AWin*(1-uSha)*(HDif*alphaEx(HEM)+HRoo*alphaIn(HEM))</code>\n</li>\n<li>\nthe absorbed radiation by unshaded part (angular part from exterior source): <code>AWin*(1-uSha)*HDir*alphaEx(IncAng)</code>\n</li>\n<li>\nthe absorbed radiaiton by shaded part (diffusive part): <code>AWin*uSha*(HDif*alphaExSha(HEM)+HRoo*alphaInSha(HEM))</code>\n</li>\n<li>\nthe absorbed radiation by shaded part (angular part from exterior source): <code>AWin*uSha*HDir*alphaExSha(IncAng)</code>\n</li>\n</ol>\n<p>\nThe output is <code>absRad[1, 2:N+1] = Part1 + Part2; absRad[2, 2:N+1] = Part3 + Part4</code>\n</p>\n\n<h4>References</h4>\n<ul>\n<li>\nMichael Wetter.<br/>\n<a href=\\\"http://simulationresearch.lbl.gov/wetter/download/mwdiss.pdf\\\">\nSimulation-based Building Energy Optimization</a>.<br/>\nDissertation. University of California at Berkeley. 2004.\n</li>\n</ul>\n</html>\""
                                }
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "revisions",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<ul>\n<li>\nOctober 22, 2016, by Michael Wetter:<br/>\nAdded range for loop variable for JModelica.<br/>\nMade units of <code>HRoo</code> final.<br/>\nRemoved unused protected constants <code>k</code>,\n<code>Interior</code> and <code>Exterior</code>.\n</li>\n<li>\nAugust 7, 2015, by Michael Wetter:<br/>\nRevised model to allow modeling of electrochromic windows.\nThis is for\n<a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/445\\\">issue 445</a>.\n</li>\n<li>\nJanuary 21, 2015, by Michael Wetter:<br/>\nChanged <code>initial algorithm</code> to\n<code>initial equation</code> section and removed\ndublicate assignments.\nThis is required for OpenModelica.\n</li>\n<li>\nOctober 17, 2014, by Michael Wetter:<br/>\nAdded missing <code>each</code> keywords in parameter declarations.\n</li>\n<li>\nMarch 4, 2011, by Wangda Zuo:<br/>\nRemoved the if-statement and integer function that can trigger events.\n</li>\n<li>\nFebruary 2, 2010, by Michael Wetter:<br/>\nMade connector <code>uSha</code> a conditional connector.\n</li>\n<li>\nDecember 15, 2010, by Wangda Zuo:<br/>\nSeparate transmittance and absorbance.\n</li>\n<li>\nDecember 12, 2010, by Michael Wetter:<br/>\nReplaced record\n<a href=\\\"modelica://Buildings.HeatTransfer.Data.GlazingSystems\\\">\nBuildings.HeatTransfer.Data.GlazingSystems</a> with the\nparameters used by this model.\nThis was needed to integrate the radiation model into the room model.\n</li>\n<li>\nDecember 10, 2010, by Wangda Zuo:<br/>\nFirst implementation.\n</li>\n</ul>\n</html>\""
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Icon",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "graphics": [
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 26,
                                        "y": 86
                                      },
                                      {
                                        "x": 102,
                                        "y": 74
                                      }
                                    ],
                                    "textString": "\"QAbsExtSha\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    }
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -101,
                                        "y": -73
                                      },
                                      {
                                        "x": -54,
                                        "y": -82
                                      }
                                    ],
                                    "textString": "\"HRoo\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    }
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 24,
                                        "y": -68
                                      },
                                      {
                                        "x": 102,
                                        "y": -80
                                      }
                                    ],
                                    "textString": "\"QAbsIntSha\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    }
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 34,
                                        "y": 46
                                      },
                                      {
                                        "x": 94,
                                        "y": 32
                                      }
                                    ],
                                    "textString": "\"QAbsGlaUns\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    }
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 30,
                                        "y": -32
                                      },
                                      {
                                        "x": 104,
                                        "y": -44
                                      }
                                    ],
                                    "textString": "\"QAbsGlaSha\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "modelicaFile": "Buildings/HeatTransfer/Windows/BaseClasses/AbsorbedRadiation.mo",
  "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/HeatTransfer/Windows/BaseClasses/AbsorbedRadiation.mo",
  "checksum": "443bfd313613c4e31a1610b10a1e278d"
}