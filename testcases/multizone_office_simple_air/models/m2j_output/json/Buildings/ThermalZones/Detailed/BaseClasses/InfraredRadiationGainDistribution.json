{
  "within": "Buildings.ThermalZones.Detailed.BaseClasses",
  "class_definition": [
    {
      "class_prefixes": "model",
      "class_specifier": {
        "long_class_specifier": {
          "identifier": "InfraredRadiationGainDistribution",
          "description_string": "Infrared radiative heat gain distribution between the room facing surfaces",
          "composition": {
            "element_list": [
              {
                "extends_clause": {
                  "name": "Buildings.ThermalZones.Detailed.BaseClasses.PartialSurfaceInterfaceRadiative"
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Boolean",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "haveShade"
                      },
                      "description": {
                        "description_string": "Set to true if a shade is present"
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "uSha",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "NConExtWin"
                            }
                          }
                        ],
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "each": true,
                                "element_modification": {
                                  "name": "max",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "1"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "condition_attribute": {
                        "expression": {
                          "simple_expression": "haveShade"
                        }
                      },
                      "description": {
                        "description_string": "Control signal for the shading device (removed if no shade is present)",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": -280,
                                        "y": 160
                                      },
                                      {
                                        "x": -240,
                                        "y": 200
                                      }
                                    ]
                                  },
                                  "iconTransformation": {
                                    "extent": [
                                      {
                                        "x": -280,
                                        "y": 160
                                      },
                                      {
                                        "x": -240,
                                        "y": 200
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "Q_flow"
                      },
                      "description": {
                        "description_string": "Radiative heat input into room (positive if heat gain)",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "origin": {
                                      "x": -260,
                                      "y": 0
                                    },
                                    "extent": [
                                      {
                                        "x": 20,
                                        "y": -20
                                      },
                                      {
                                        "x": -20,
                                        "y": 20
                                      }
                                    ],
                                    "rotation": 180
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Buildings.HeatTransfer.Interfaces.RadiosityOutflow",
                  "array_subscripts": [
                    {
                      "expression": {
                        "simple_expression": "NConExtWin"
                      }
                    }
                  ],
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "JOutConExtWin"
                      },
                      "description": {
                        "description_string": "Outgoing radiosity that connects to shaded and unshaded part of glass",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": 240,
                                        "y": 110
                                      },
                                      {
                                        "x": 260,
                                        "y": 130
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "element_sections": [
              {
                "protected_element_list": [
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "fraConExt",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConExt"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "AEpsConExt*sumAEpsInv"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Fraction of infrared radiant heat gain absorbed by exterior constructions"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "fraConExtWinOpa",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConExtWin"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "AEpsConExtWinOpa*sumAEpsInv"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Fraction of infrared radiant heat gain absorbed by opaque part of exterior constructions that have a window"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "fraConExtWinGla",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConExtWin"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "(AEpsConExtWinSha +AEpsConExtWinUns)*sumAEpsInv"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Fraction of infrared radiant heat gain absorbed by opaque part of glass constructions that have a window"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "fraConExtWinFra",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConExtWin"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "AEpsConExtWinFra*sumAEpsInv"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Fraction of infrared radiant heat gain absorbed by window frame of exterior constructions that have a window"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "fraConPar_a",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConPar"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "AEpsConPar_a*sumAEpsInv"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Fraction of infrared radiant heat gain absorbed by partition constructions surface a"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "fraConPar_b",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConPar"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "AEpsConPar_b*sumAEpsInv"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Fraction of infrared radiant heat gain absorbed by partition constructions surface b"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "fraConBou",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConBou"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "AEpsConBou*sumAEpsInv"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Fraction of infrared radiant heat gain absorbed by constructions with exterior boundary conditions exposed to outside of room model"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "fraSurBou",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NSurBou"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "AEpsSurBou*sumAEpsInv"
                              }
                            }
                          },
                          "description": {
                            "description_string": "Fraction of infrared radiant heat gain absorbed by surface models of constructions that are modeled outside of this room"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "AEpsConExt",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConExt"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "for_loop": {
                                    "expression": {
                                      "simple_expression": "AConExt[i]*epsConExt[i]"
                                    },
                                    "for_loop": [
                                      {
                                        "name": "i",
                                        "range": "1:NConExt"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity times area of exterior constructions"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "AEpsConExtWinOpa",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConExtWin"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "for_loop": {
                                    "expression": {
                                      "simple_expression": "AConExtWinOpa[i]*epsConExtWinOpa[i]"
                                    },
                                    "for_loop": [
                                      {
                                        "name": "i",
                                        "range": "1:NConExtWin"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity times area of opaque part of exterior constructions that contain a window"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "AEpsConExtWinUns",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConExtWin"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "for_loop": {
                                    "expression": {
                                      "simple_expression": "shaSig[i].yCom*AConExtWinGla[i]*epsConExtWinUns[i]"
                                    },
                                    "for_loop": [
                                      {
                                        "name": "i",
                                        "range": "1:NConExtWin"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity times area of unshaded window constructions"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "AEpsConExtWinSha",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConExtWin"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "for_loop": {
                                    "expression": {
                                      "simple_expression": "shaSig[i].y*AConExtWinGla[i]*epsConExtWinSha[i]"
                                    },
                                    "for_loop": [
                                      {
                                        "name": "i",
                                        "range": "1:NConExtWin"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity times area of shaded window constructions"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "AEpsConExtWinFra",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConExtWin"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "for_loop": {
                                    "expression": {
                                      "simple_expression": "AConExtWinFra[i]*epsConExtWinFra[i]"
                                    },
                                    "for_loop": [
                                      {
                                        "name": "i",
                                        "range": "1:NConExtWin"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity times area of window frame"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "AEpsConPar_a",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConPar"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "for_loop": {
                                    "expression": {
                                      "simple_expression": "AConPar[i]*epsConPar_a[i]"
                                    },
                                    "for_loop": [
                                      {
                                        "name": "i",
                                        "range": "1:NConPar"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity times area of partition constructions surface a"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "AEpsConPar_b",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConPar"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "for_loop": {
                                    "expression": {
                                      "simple_expression": "AConPar[i]*epsConPar_b[i]"
                                    },
                                    "for_loop": [
                                      {
                                        "name": "i",
                                        "range": "1:NConPar"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity times area of partition constructions surface b"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "AEpsConBou",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConBou"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "for_loop": {
                                    "expression": {
                                      "simple_expression": "AConBou[i]*epsConBou[i]"
                                    },
                                    "for_loop": [
                                      {
                                        "name": "i",
                                        "range": "1:NConBou"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity times area of constructions with exterior boundary conditions exposed to outside of room model"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "AEpsSurBou",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NSurBou"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "for_loop": {
                                    "expression": {
                                      "simple_expression": "ASurBou[i]*epsSurBou[i]"
                                    },
                                    "for_loop": [
                                      {
                                        "name": "i",
                                        "range": "1:NSurBou"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Absorptivity times area of surface models of constructions that are modeled outside of this room"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "sumAEpsNoWin",
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "element_modification": {
                                      "name": "fixed",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "false"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Sum of absorptivity times area of all constructions except for windows"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "sumAEpsInv"
                          },
                          "description": {
                            "description_string": "Inverse of sum of absorptivity times area of all constructions including windows"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Buildings.HeatTransfer.Windows.BaseClasses.ShadingSignal",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "shaSig",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "NConExtWin"
                                }
                              }
                            ],
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "each": true,
                                    "final": true,
                                    "element_modification": {
                                      "name": "haveShade",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "haveShade"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Block to constrain the shading control signal to be strictly within (0, 1) if a shade is present"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "equation_section": {
                  "initial": true,
                  "equation": [
                    {
                      "assignment_equation": {
                        "lhs": "sumAEpsNoWin",
                        "rhs": {
                          "simple_expression": "sum(AEpsConExt) +sum(AEpsConExtWinOpa) +sum(AEpsConExtWinFra) +sum(AEpsConPar_a) +sum(AEpsConPar_b) +sum(AEpsConBou) +sum(AEpsSurBou)"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "equation_section": {
                  "equation": [
                    {
                      "connect_clause": {
                        "from": [
                          {
                            "dot_op": false,
                            "identifier": "uSha"
                          }
                        ],
                        "to": [
                          {
                            "dot_op": false,
                            "identifier": "shaSig"
                          },
                          {
                            "dot_op": true
                          },
                          {
                            "dot_op": false,
                            "identifier": "u"
                          }
                        ]
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "sumAEpsInv",
                        "rhs": {
                          "simple_expression": "1/(sumAEpsNoWin +sum(AEpsConExtWinUns) +sum(AEpsConExtWinSha))"
                        }
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "haveConExt"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "conExt.Q_flow",
                                    "rhs": {
                                      "simple_expression": "-fraConExt*Q_flow"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "conExt[1].T",
                              "rhs": {
                                "simple_expression": "293.15"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "haveConExtWin"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "conExtWin.Q_flow",
                                    "rhs": {
                                      "simple_expression": "-fraConExtWinOpa*Q_flow"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "conExtWin[1].T",
                              "rhs": {
                                "simple_expression": "293.15"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "haveConPar"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "conPar_a.Q_flow",
                                    "rhs": {
                                      "simple_expression": "-fraConPar_a*Q_flow"
                                    }
                                  }
                                }
                              },
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "conPar_b.Q_flow",
                                    "rhs": {
                                      "simple_expression": "-fraConPar_b*Q_flow"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "conPar_a[1].T",
                              "rhs": {
                                "simple_expression": "293.15"
                              }
                            }
                          },
                          {
                            "assignment_equation": {
                              "lhs": "conPar_b[1].T",
                              "rhs": {
                                "simple_expression": "293.15"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "haveConBou"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "conBou.Q_flow",
                                    "rhs": {
                                      "simple_expression": "-fraConBou*Q_flow"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "conBou[1].T",
                              "rhs": {
                                "simple_expression": "293.15"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "haveSurBou"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "conSurBou.Q_flow",
                                    "rhs": {
                                      "simple_expression": "-fraSurBou*Q_flow"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "conSurBou[1].T",
                              "rhs": {
                                "simple_expression": "293.15"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "JOutConExtWin",
                        "rhs": {
                          "simple_expression": "+fraConExtWinGla*Q_flow"
                        }
                      }
                    },
                    {
                      "if_equation": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "haveConExtWin"
                            },
                            "then": [
                              {
                                "equation": {
                                  "assignment_equation": {
                                    "lhs": "conExtWinFra.Q_flow",
                                    "rhs": {
                                      "simple_expression": "-fraConExtWinFra*Q_flow"
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "else_equation": [
                          {
                            "assignment_equation": {
                              "lhs": "conExtWinFra[1].T",
                              "rhs": {
                                "simple_expression": "293.15"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "function_call_equation": {
                        "function_name": "assert",
                        "function_call_args": {
                          "function_argument": {
                            "expression": {
                              "simple_expression": {
                                "logical_expression": {
                                  "logical_or": [
                                    {
                                      "logical_and": [
                                        {
                                          "arithmetic_expressions": [
                                            {
                                              "name": "abs(1 -sum(fraConExt) -sum(fraConExtWinOpa) -sum(fraConExtWinGla) -sum(fraConExtWinFra) -sum(fraConPar_a) -sum(fraConPar_b) -sum(fraConBou) -sum(fraSurBou))"
                                            },
                                            {
                                              "name": "0.00001"
                                            }
                                          ],
                                          "relation_operator": "<"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "function_arguments": {
                            "function_argument": {
                              "expression": {
                                "simple_expression": "\"Programming error: Radiation balance is wrong. Check equations.\""
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "annotation": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "preferredView",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "\"info\""
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Documentation",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "info",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\nThis model computes the distribution of the infrared radiant heat gain\nto the room surfaces.\nThe infrared radiant heat gain <i>Q</i> is an input to this model.\nIt is distributed to the individual surfaces according to\n<p align=\\\"center\\\" style=\\\"font-style:italic;\\\">\n  Q<sup>i</sup> = Q &nbsp; A<sup>i</sup> &nbsp; &epsilon;<sup>i</sup> &frasl;\n &sum;<sub>k</sub> A<sup>k</sup> &nbsp; &epsilon;<sup>k</sup>.\n</p>\nFor opaque surfaces, the heat flow rate\n<i>Q<sup>i</sup></i>\nis set to be equal to the heat flow rate at the heat port.\nFor the glass of the windows, the heat flow rate\n<i>Q<sup>i</sup></i> is set to the radiosity\n<i>J<sup>i</sup></i>\nthat will strike the glass or the window shade.\n</html>\""
                                }
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "revisions",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<ul>\n<li>\nMay 21, 2015, by Michael Wetter:<br/>\nReformulated to reduce use of the division macro\nin Dymola.\nThis is for <a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/417\\\">issue 417</a>.\n</li>\n<li>\nJuly 16, 2013, by Michael Wetter:<br/>\nAdded assignment of heat port temperature instead of heat flow rate\nfor the cases where a construction has been conditionally removed.\nThis is required to avoid a singularity.\n</li>\n<li>\nJune 27, 2013, by Michael Wetter:<br/>\nChanged model because the outflowing radiosity has been changed to be a non-negative quantity.\nSee track issue <a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/158\\\">#158</a>.\n</li>\n<li>\nDecember 1, 2010, by Michael Wetter:<br/>\nFirst implementation.\n</li>\n</ul>\n</html>\""
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Icon",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "graphics": [
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -234,
                                        "y": 40
                                      },
                                      {
                                        "x": -178,
                                        "y": 10
                                      }
                                    ],
                                    "textString": "\"Q_flow\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    }
                                  }
                                },
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -242,
                                        "y": 4
                                      },
                                      {
                                        "x": -2,
                                        "y": -4
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "fillColor": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -4,
                                        "y": 4
                                      },
                                      {
                                        "x": 2,
                                        "y": -8
                                      }
                                    ],
                                    "lineColor": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "fillColor": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "fillPattern": "FillPattern.Solid"
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -144,
                                        "y": -8
                                      },
                                      {
                                        "x": 146,
                                        "y": -8
                                      }
                                    ],
                                    "color": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "thickness": 0.5,
                                    "smooth": "Smooth.None"
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": 2,
                                        "y": -200
                                      },
                                      {
                                        "x": 2,
                                        "y": 184
                                      }
                                    ],
                                    "color": {
                                      "r": 255,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "thickness": 0.5,
                                    "smooth": "Smooth.None"
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -230,
                                        "y": 210
                                      },
                                      {
                                        "x": -174,
                                        "y": 148
                                      }
                                    ],
                                    "textString": "\"uSha\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 127
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Diagram",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "coordinateSystem": {
                                "extent": [
                                  {
                                    "x": -240,
                                    "y": -240
                                  },
                                  {
                                    "x": 240,
                                    "y": 240
                                  }
                                ],
                                "preserveAspectRatio": "true"
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {}
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "modelicaFile": "Buildings/ThermalZones/Detailed/BaseClasses/InfraredRadiationGainDistribution.mo",
  "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/ThermalZones/Detailed/BaseClasses/InfraredRadiationGainDistribution.mo",
  "checksum": "0ec54d57cdd2294b63142efebe09ee5a"
}