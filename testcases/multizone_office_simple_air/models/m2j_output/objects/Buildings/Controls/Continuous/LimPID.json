{
  "instances": {
    "LimPID": {
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo",
      "type": "long_class_specifier",
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "defaultComponentName",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "\"conPID\""
                }
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Documentation",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "info",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"<html>\n<p>\nPID controller in the standard form\n</p>\n<p align=\\\"center\\\" style=\\\"font-style:italic;\\\">\ny = k &nbsp; ( e(t) + 1 &frasl; T<sub>i</sub> &nbsp; &int; e(s) ds + T<sub>d</sub> de(t)&frasl;dt ),\n</p>\n<p>\nwhere\n<i>y</i> is the control signal,\n<i>e(t) = u<sub>s</sub> - u<sub>m</sub></i> is the control error,\nwith <i>u<sub>s</sub></i> being the set point and <i>u<sub>m</sub></i> being\nthe measured quantity,\n<i>k</i> is the gain,\n<i>T<sub>i</sub></i> is the time constant of the integral term and\n<i>T<sub>d</sub></i> is the time constant of the derivative term.\n</p>\n<p>\nNote that the units of <i>k</i> are the inverse of the units of the control error,\nwhile the units of <i>T<sub>i</sub></i> and <i>T<sub>d</sub></i> are seconds.\n</p>\n<p>\nFor detailed treatment of integrator anti-windup, set-point weights and output limitation, see\n<a href=\\\"modelica://Modelica.Blocks.Continuous.LimPID\\\">Modelica.Blocks.Continuous.LimPID</a>.\n</p>\n<h4>Options</h4>\nThis controller can be configured as follows.\n<h5>P, PI, PD, or PID action</h5>\n<p>\nThrough the parameter <code>controllerType</code>, the controller can be configured\nas P, PI, PD or PID controller. The default configuration is PI.\n</p>\n<h5>Direct or reverse acting</h5>\n<p>\nThrough the parameter <code>reverseActing</code>, the controller can be configured to\nbe reverse or direct acting.\nThe above standard form is reverse acting, which is the default configuration.\nFor a reverse acting controller, for a constant set point,\nan increase in measurement signal <code>u_m</code> decreases the control output signal <code>y</code>\n(Montgomery and McDowall, 2008).\nThus,\n</p>\n<ul>\n  <li>\n  for a heating coil with a two-way valve, leave <code>reverseActing = true</code>, but\n  </li>\n  <li>\n  for a cooling coil with a two-way valve, set <code>reverseActing = false</code>.\n  </li>\n</ul>\n<h5>Reset of the controller output</h5>\n<p>\nThe controller can be configured to enable an input port that allows resetting the controller\noutput. The controller output can be reset as follows:\n</p>\n<ul>\n  <li>\n  If <code>reset = Buildings.Types.Reset.Disabled</code>, which is the default,\n  then the controller output is never reset.\n  </li>\n  <li>\n  If <code>reset = Buildings.Types.Reset.Parameter</code>, then a boolean\n  input signal <code>trigger</code> is enabled. Whenever the value of\n  this input changes from <code>false</code> to <code>true</code>,\n  the controller output is reset by setting <code>y</code>\n  to the value of the parameter <code>y_reset</code>.\n  </li>\n  <li>\n  If <code>reset = Buildings.Types.Reset.Input</code>, then a boolean\n  input signal <code>trigger</code> and a real input signal <code>y_reset_in</code>\n  are enabled. Whenever the value of\n  <code>trigger</code> changes from <code>false</code> to <code>true</code>,\n  the controller output is reset by setting the value of <code>y</code>\n  to <code>y_reset_in</code>.\n  </li>\n</ul>\n<p>\nNote that this controller implements an integrator anti-windup. Therefore,\nfor most applications, keeping the default setting of\n<code>reset = Buildings.Types.Reset.Disabled</code> is sufficient.\nHowever, if the controller is used in conjuction with equipment that is being\nswitched on, better control performance may be achieved by resetting the controller\noutput when the equipment is switched on.\nThis is in particular the case in situations\nwhere the equipment control input should continuously increase as the equipment is\nswitched on, such as a light dimmer that may slowly increase the luminance, or\na variable speed drive of a motor that should continuously increase the speed.\n</p>\n<h4>References</h4>\n<p>\nR. Montgomery and R. McDowall (2008).\n\\\"Fundamentals of HVAC Control Systems.\\\"\nAmerican Society of Heating Refrigerating and Air-Conditioning Engineers Inc. Atlanta, GA.\n</p>\n\n</html>\""
                          }
                        }
                      }
                    }
                  },
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "revisions",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"<html>\n<ul>\n<li>\nJune 1, 2020, by Michael Wetter:<br/>\nCorrected wrong convention of reverse and direct action.<br/>\nChanged default configuration from PID to PI.<br/>\nThis is for <a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/1365\\\">issue 1365</a>.\n</li>\n<li>\nMarch 9, 2020, by Michael Wetter:<br/>\nCorrected wrong unit declaration for parameter <code>k</code>.<br/>\nThis is for <a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/1316\\\">issue 1316</a>.\n</li>\n<li>\nOctober 19, 2019, by Filip Jorissen:<br/>\nDisabled homotopy to ensure bounded outputs\nby copying the implementation from MSL 3.2.3 and by\nhardcoding the implementation for <code>homotopyType=NoHomotopy</code>.\nSee <a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/1221\\\">issue 1221</a>.\n</li>\n<li>\nSeptember 29, 2016, by Michael Wetter:<br/>\nRefactored model.\n</li>\n<li>\nAugust 25, 2016, by Michael Wetter:<br/>\nRemoved parameter <code>limitsAtInit</code> because it was only propagated to\nthe instance <code>limiter</code>, but this block no longer makes use of this parameter.\nThis is a non-backward compatible change.<br/>\nRevised implemenentation, added comments, made some parameter in the instances final.\n</li>\n<li>July 18, 2016, by Philipp Mehrfeld:<br/>\nAdded integrator reset.\nThis is for <a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/494\\\">issue 494</a>.\n</li>\n<li>\nMarch 15, 2016, by Michael Wetter:<br/>\nChanged the default value to <code>strict=true</code> in order to avoid events\nwhen the controller saturates.\nThis is for <a href=\\\"https://github.com/ibpsa/modelica-ibpsa/issues/433\\\">issue 433</a>.\n</li>\n<li>\nFebruary 24, 2010, by Michael Wetter:<br/>\nFirst implementation.\n</li>\n</ul>\n</html>\""
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Icon",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "graphics": [
                          {
                            "name": "Rectangle",
                            "attribute": {
                              "extent": [
                                {
                                  "x": -6,
                                  "y": -20
                                },
                                {
                                  "x": 66,
                                  "y": -66
                                }
                              ],
                              "lineColor": {
                                "r": 255,
                                "g": 255,
                                "b": 255
                              },
                              "fillColor": {
                                "r": 255,
                                "g": 255,
                                "b": 255
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Text",
                            "attribute": {
                              "extent": [
                                {
                                  "x": -32,
                                  "y": -22
                                },
                                {
                                  "x": 68,
                                  "y": -62
                                }
                              ],
                              "textString": "\"P\"",
                              "visible": "([object Object])",
                              "lineColor": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "fillColor": {
                                "r": 175,
                                "g": 175,
                                "b": 175
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Text",
                            "attribute": {
                              "extent": [
                                {
                                  "x": -28,
                                  "y": -22
                                },
                                {
                                  "x": 72,
                                  "y": -62
                                }
                              ],
                              "textString": "\"PI\"",
                              "visible": "([object Object])",
                              "lineColor": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "fillColor": {
                                "r": 175,
                                "g": 175,
                                "b": 175
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Text",
                            "attribute": {
                              "extent": [
                                {
                                  "x": -16,
                                  "y": -22
                                },
                                {
                                  "x": 88,
                                  "y": -62
                                }
                              ],
                              "textString": "\"P D\"",
                              "visible": "([object Object])",
                              "lineColor": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "fillColor": {
                                "r": 175,
                                "g": 175,
                                "b": 175
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Text",
                            "attribute": {
                              "extent": [
                                {
                                  "x": -14,
                                  "y": -22
                                },
                                {
                                  "x": 86,
                                  "y": -62
                                }
                              ],
                              "textString": "\"PID\"",
                              "visible": "([object Object])",
                              "lineColor": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "fillColor": {
                                "r": 175,
                                "g": 175,
                                "b": 175
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Polygon",
                            "attribute": {
                              "points": [
                                {
                                  "x": -80,
                                  "y": 90
                                },
                                {
                                  "x": -88,
                                  "y": 68
                                },
                                {
                                  "x": -72,
                                  "y": 68
                                },
                                {
                                  "x": -80,
                                  "y": 90
                                }
                              ],
                              "lineColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -80,
                                  "y": 78
                                },
                                {
                                  "x": -80,
                                  "y": -90
                                }
                              ],
                              "color": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              }
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -80,
                                  "y": -80
                                },
                                {
                                  "x": -80,
                                  "y": -20
                                },
                                {
                                  "x": 30,
                                  "y": 60
                                },
                                {
                                  "x": 80,
                                  "y": 60
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 127
                              }
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -90,
                                  "y": -80
                                },
                                {
                                  "x": 82,
                                  "y": -80
                                }
                              ],
                              "color": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              }
                            }
                          },
                          {
                            "name": "Polygon",
                            "attribute": {
                              "points": [
                                {
                                  "x": 90,
                                  "y": -80
                                },
                                {
                                  "x": 68,
                                  "y": -72
                                },
                                {
                                  "x": 68,
                                  "y": -88
                                },
                                {
                                  "x": 90,
                                  "y": -80
                                }
                              ],
                              "lineColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": 30,
                                  "y": 60
                                },
                                {
                                  "x": 81,
                                  "y": 60
                                }
                              ],
                              "color": {
                                "r": 255,
                                "g": 0,
                                "b": 0
                              },
                              "smooth": "Smooth.None",
                              "visible": "strict"
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {}
    },
    "controlError": {
      "type_prefix": "output",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "controlError",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "u_s -u_m"
            }
          }
        },
        "description": {
          "description_string": "Control error (set point - measurement)"
        }
      },
      "annotation": null,
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "controllerType": {
      "type_prefix": "parameter",
      "type_specifier": "Modelica.Blocks.Types.SimpleController",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "controllerType",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "Modelica.Blocks.Types.SimpleController.PI"
            }
          }
        },
        "description": {
          "description_string": "Type of controller"
        }
      },
      "annotation": null,
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "k": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "k",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "min",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "0"
                      }
                    }
                  }
                }
              }
            ],
            "equal": true,
            "expression": {
              "simple_expression": "1"
            }
          }
        },
        "description": {
          "description_string": "Gain of controller"
        }
      },
      "annotation": null,
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "Ti": {
      "type_prefix": "parameter",
      "type_specifier": "Modelica.Units.SI.Time",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "Ti",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "min",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "Modelica.Constants.small"
                      }
                    }
                  }
                }
              }
            ],
            "equal": true,
            "expression": {
              "simple_expression": "0.5"
            }
          }
        },
        "description": {
          "description_string": "Time constant of Integrator block",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "enable",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": "Modelica.Blocks.Types.SimpleController.PI"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      },
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": "Modelica.Blocks.Types.SimpleController.PID"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "enable",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "logical_expression": {
                                "logical_or": [
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": "Modelica.Blocks.Types.SimpleController.PI"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  },
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": "Modelica.Blocks.Types.SimpleController.PID"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "Td": {
      "type_prefix": "parameter",
      "type_specifier": "Modelica.Units.SI.Time",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "Td",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "min",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "0"
                      }
                    }
                  }
                }
              }
            ],
            "equal": true,
            "expression": {
              "simple_expression": "0.1"
            }
          }
        },
        "description": {
          "description_string": "Time constant of Derivative block",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "enable",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": "Modelica.Blocks.Types.SimpleController.PD"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      },
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": "Modelica.Blocks.Types.SimpleController.PID"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "enable",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "logical_expression": {
                                "logical_or": [
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": "Modelica.Blocks.Types.SimpleController.PD"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  },
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": "Modelica.Blocks.Types.SimpleController.PID"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "yMax": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "yMax",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "start",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "1"
                      }
                    }
                  }
                }
              }
            ],
            "equal": true,
            "expression": {
              "simple_expression": "1"
            }
          }
        },
        "description": {
          "description_string": "Upper limit of output"
        }
      },
      "annotation": null,
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "yMin": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "yMin",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "0"
            }
          }
        },
        "description": {
          "description_string": "Lower limit of output"
        }
      },
      "annotation": null,
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "wp": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "wp",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "min",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "0"
                      }
                    }
                  }
                }
              }
            ],
            "equal": true,
            "expression": {
              "simple_expression": "1"
            }
          }
        },
        "description": {
          "description_string": "Set-point weight for Proportional block (0..1)"
        }
      },
      "annotation": null,
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "wd": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "wd",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "min",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "0"
                      }
                    }
                  }
                }
              }
            ],
            "equal": true,
            "expression": {
              "simple_expression": "0"
            }
          }
        },
        "description": {
          "description_string": "Set-point weight for Derivative block (0..1)",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "enable",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": ".Modelica.Blocks.Types.SimpleController.PD"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      },
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": ".Modelica.Blocks.Types.SimpleController.PID"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "enable",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "logical_expression": {
                                "logical_or": [
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": ".Modelica.Blocks.Types.SimpleController.PD"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  },
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": ".Modelica.Blocks.Types.SimpleController.PID"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "Ni": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "Ni",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "min",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "100*Modelica.Constants.eps"
                      }
                    }
                  }
                }
              }
            ],
            "equal": true,
            "expression": {
              "simple_expression": "0.9"
            }
          }
        },
        "description": {
          "description_string": "Ni*Ti is time constant of anti-windup compensation",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "enable",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": ".Modelica.Blocks.Types.SimpleController.PI"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      },
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": ".Modelica.Blocks.Types.SimpleController.PID"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "enable",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "logical_expression": {
                                "logical_or": [
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": ".Modelica.Blocks.Types.SimpleController.PI"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  },
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": ".Modelica.Blocks.Types.SimpleController.PID"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "Nd": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "Nd",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "min",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "100*Modelica.Constants.eps"
                      }
                    }
                  }
                }
              }
            ],
            "equal": true,
            "expression": {
              "simple_expression": "10"
            }
          }
        },
        "description": {
          "description_string": "The higher Nd, the more ideal the derivative block",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "enable",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": ".Modelica.Blocks.Types.SimpleController.PD"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      },
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": ".Modelica.Blocks.Types.SimpleController.PID"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "enable",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "logical_expression": {
                                "logical_or": [
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": ".Modelica.Blocks.Types.SimpleController.PD"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  },
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": ".Modelica.Blocks.Types.SimpleController.PID"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "initType": {
      "type_prefix": "parameter",
      "type_specifier": "Modelica.Blocks.Types.Init",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "initType",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "Modelica.Blocks.Types.Init.InitialState"
            }
          }
        },
        "description": {
          "description_string": "Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output)",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Evaluate",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "group",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "\"Initialization\""
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Evaluate",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "group",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"Initialization\""
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "xi_start": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "xi_start",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "0"
            }
          }
        },
        "description": {
          "description_string": "Initial or guess value value for integrator output (= integrator state)",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "group",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "\"Initialization\""
                              }
                            }
                          }
                        }
                      },
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "enable",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": ".Modelica.Blocks.Types.SimpleController.PI"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      },
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": ".Modelica.Blocks.Types.SimpleController.PID"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "group",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"Initialization\""
                          }
                        }
                      }
                    }
                  },
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "enable",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "logical_expression": {
                                "logical_or": [
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": ".Modelica.Blocks.Types.SimpleController.PI"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  },
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": ".Modelica.Blocks.Types.SimpleController.PID"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "xd_start": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "xd_start",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "0"
            }
          }
        },
        "description": {
          "description_string": "Initial or guess value for state of derivative block",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "group",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "\"Initialization\""
                              }
                            }
                          }
                        }
                      },
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "enable",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": ".Modelica.Blocks.Types.SimpleController.PD"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      },
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "controllerType"
                                              },
                                              {
                                                "name": ".Modelica.Blocks.Types.SimpleController.PID"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "group",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"Initialization\""
                          }
                        }
                      }
                    }
                  },
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "enable",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "logical_expression": {
                                "logical_or": [
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": ".Modelica.Blocks.Types.SimpleController.PD"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  },
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "controllerType"
                                          },
                                          {
                                            "name": ".Modelica.Blocks.Types.SimpleController.PID"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "y_start": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "y_start",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "0"
            }
          }
        },
        "description": {
          "description_string": "Initial value of output",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "enable",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "initType"
                                              },
                                              {
                                                "name": "Modelica.Blocks.Types.Init.InitialOutput"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "group",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "\"Initialization\""
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "enable",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "logical_expression": {
                                "logical_or": [
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "initType"
                                          },
                                          {
                                            "name": "Modelica.Blocks.Types.Init.InitialOutput"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "group",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"Initialization\""
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "strict": {
      "type_prefix": "parameter",
      "type_specifier": "Boolean",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "strict",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "true"
            }
          }
        },
        "description": {
          "description_string": "= true, if strict limits with noEvent(..)",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Evaluate",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "choices",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "checkBox",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "true"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "tab",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "\"Advanced\""
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Evaluate",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "choices",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "checkBox",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "true"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "tab",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"Advanced\""
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "reverseActing": {
      "type_prefix": "parameter",
      "type_specifier": "Boolean",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "reverseActing",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "true"
            }
          }
        },
        "description": {
          "description_string": "Set to true for reverse acting, or false for direct acting control action"
        }
      },
      "annotation": null,
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "reset": {
      "type_prefix": "parameter",
      "type_specifier": "Buildings.Types.Reset",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "reset",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "Buildings.Types.Reset.Disabled"
            }
          }
        },
        "description": {
          "description_string": "Type of controller output reset",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Evaluate",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "group",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "\"Integrator reset\""
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Evaluate",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "group",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"Integrator reset\""
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "y_reset": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "y_reset",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "xi_start"
            }
          }
        },
        "description": {
          "description_string": "Value to which the controller output is reset if the boolean trigger has a rising edge, used if reset == Buildings.Types.Reset.Parameter",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "enable",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "reset"
                                              },
                                              {
                                                "name": "Buildings.Types.Reset.Parameter"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "group",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "\"Integrator reset\""
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "enable",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": {
                              "logical_expression": {
                                "logical_or": [
                                  {
                                    "logical_and": [
                                      {
                                        "arithmetic_expressions": [
                                          {
                                            "name": "reset"
                                          },
                                          {
                                            "name": "Buildings.Types.Reset.Parameter"
                                          }
                                        ],
                                        "relation_operator": "=="
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "group",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"Integrator reset\""
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "trigger": {
      "type_specifier": "Modelica.Blocks.Interfaces.BooleanInput",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "trigger"
        },
        "condition_attribute": {
          "expression": {
            "simple_expression": {
              "logical_expression": {
                "logical_or": [
                  {
                    "logical_and": [
                      {
                        "arithmetic_expressions": [
                          {
                            "name": "reset"
                          },
                          {
                            "name": "Buildings.Types.Reset.Disabled"
                          }
                        ],
                        "relation_operator": "<>"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "description": {
          "description_string": "Resets the controller output when trigger becomes true",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "origin": {
                        "x": -80,
                        "y": -120
                      },
                      "extent": [
                        {
                          "x": -20,
                          "y": -20
                        },
                        {
                          "x": 20,
                          "y": 20
                        }
                      ],
                      "rotation": 90
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "origin": {
                    "x": -80,
                    "y": -120
                  },
                  "extent": [
                    {
                      "x": -20,
                      "y": -20
                    },
                    {
                      "x": 20,
                      "y": 20
                    }
                  ],
                  "rotation": 90
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "y_reset_in": {
      "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "y_reset_in"
        },
        "condition_attribute": {
          "expression": {
            "simple_expression": {
              "logical_expression": {
                "logical_or": [
                  {
                    "logical_and": [
                      {
                        "arithmetic_expressions": [
                          {
                            "name": "reset"
                          },
                          {
                            "name": "Buildings.Types.Reset.Input"
                          }
                        ],
                        "relation_operator": "=="
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "description": {
          "description_string": "Input signal for state to which integrator is reset, enabled if reset = Buildings.Types.Reset.Input",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": -140,
                          "y": -100
                        },
                        {
                          "x": -100,
                          "y": -60
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": -140,
                      "y": -100
                    },
                    {
                      "x": -100,
                      "y": -60
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "addP": {
      "type_specifier": "Modelica.Blocks.Math.Add",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "addP",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "k1",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "revAct*wp"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "k2",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "-revAct"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "description": {
          "description_string": "Adder for P gain",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": -80,
                          "y": 40
                        },
                        {
                          "x": -60,
                          "y": 60
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": -80,
                      "y": 40
                    },
                    {
                      "x": -60,
                      "y": 60
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "addD": {
      "type_specifier": "Modelica.Blocks.Math.Add",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "addD",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "k1",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "revAct*wd"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "k2",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "-revAct"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "condition_attribute": {
          "expression": {
            "simple_expression": "with_D"
          }
        },
        "description": {
          "description_string": "Adder for D gain",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": -80,
                          "y": -10
                        },
                        {
                          "x": -60,
                          "y": 10
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": -80,
                      "y": -10
                    },
                    {
                      "x": -60,
                      "y": 10
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "P": {
      "type_specifier": "Modelica.Blocks.Math.Gain",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "P",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "k",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "1"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "description": {
          "description_string": "Proportional term",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": -40,
                          "y": 40
                        },
                        {
                          "x": -20,
                          "y": 60
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": -40,
                      "y": 40
                    },
                    {
                      "x": -20,
                      "y": 60
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "I": {
      "type_specifier": "Utilities.Math.IntegratorWithReset",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "I",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "reset",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "if_expression": {
                          "if_elseif": [
                            {
                              "condition": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "reset"
                                              },
                                              {
                                                "name": "Buildings.Types.Reset.Disabled"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "then": {
                                "simple_expression": "reset"
                              }
                            }
                          ],
                          "else_expression": {
                            "simple_expression": "Buildings.Types.Reset.Input"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "y_reset",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "y_reset"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "unitTime/Ti"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "y_start",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "xi_start"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "initType",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "if_expression": {
                          "if_elseif": [
                            {
                              "condition": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "initType"
                                              },
                                              {
                                                "name": "Modelica.Blocks.Types.Init.SteadyState"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "then": {
                                "simple_expression": "Modelica.Blocks.Types.Init.SteadyState"
                              }
                            }
                          ],
                          "else_expression": {
                            "if_expression": {
                              "if_elseif": [
                                {
                                  "condition": {
                                    "simple_expression": {
                                      "logical_expression": {
                                        "logical_or": [
                                          {
                                            "logical_and": [
                                              {
                                                "arithmetic_expressions": [
                                                  {
                                                    "name": "initType"
                                                  },
                                                  {
                                                    "name": "Modelica.Blocks.Types.Init.InitialState"
                                                  }
                                                ],
                                                "relation_operator": "=="
                                              }
                                            ]
                                          },
                                          {
                                            "logical_and": [
                                              {
                                                "arithmetic_expressions": [
                                                  {
                                                    "name": "initType"
                                                  },
                                                  {
                                                    "name": "Modelica.Blocks.Types.Init.InitialState"
                                                  }
                                                ],
                                                "relation_operator": "=="
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "then": {
                                    "simple_expression": "Modelica.Blocks.Types.Init.InitialState"
                                  }
                                }
                              ],
                              "else_expression": {
                                "simple_expression": "Modelica.Blocks.Types.Init.NoInit"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "condition_attribute": {
          "expression": {
            "simple_expression": "with_I"
          }
        },
        "description": {
          "description_string": "Integral term",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": -40,
                          "y": -60
                        },
                        {
                          "x": -20,
                          "y": -40
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": -40,
                      "y": -60
                    },
                    {
                      "x": -20,
                      "y": -40
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "D": {
      "type_specifier": "Modelica.Blocks.Continuous.Derivative",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "D",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "Td/unitTime"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "T",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": {
                          "function_call": {
                            "name": "max",
                            "arguments": [
                              {
                                "name": "[Td/Nd,1e-14]"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "x_start",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "xd_start"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "initType",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "if_expression": {
                          "if_elseif": [
                            {
                              "condition": {
                                "simple_expression": {
                                  "logical_expression": {
                                    "logical_or": [
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "initType"
                                              },
                                              {
                                                "name": "Modelica.Blocks.Types.Init.SteadyState"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      },
                                      {
                                        "logical_and": [
                                          {
                                            "arithmetic_expressions": [
                                              {
                                                "name": "initType"
                                              },
                                              {
                                                "name": "Modelica.Blocks.Types.Init.InitialOutput"
                                              }
                                            ],
                                            "relation_operator": "=="
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "then": {
                                "simple_expression": "Modelica.Blocks.Types.Init.SteadyState"
                              }
                            }
                          ],
                          "else_expression": {
                            "if_expression": {
                              "if_elseif": [
                                {
                                  "condition": {
                                    "simple_expression": {
                                      "logical_expression": {
                                        "logical_or": [
                                          {
                                            "logical_and": [
                                              {
                                                "arithmetic_expressions": [
                                                  {
                                                    "name": "initType"
                                                  },
                                                  {
                                                    "name": "Modelica.Blocks.Types.Init.InitialState"
                                                  }
                                                ],
                                                "relation_operator": "=="
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "then": {
                                    "simple_expression": "Modelica.Blocks.Types.Init.InitialState"
                                  }
                                }
                              ],
                              "else_expression": {
                                "simple_expression": "Modelica.Blocks.Types.Init.NoInit"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "condition_attribute": {
          "expression": {
            "simple_expression": "with_D"
          }
        },
        "description": {
          "description_string": "Derivative term",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": -40,
                          "y": -10
                        },
                        {
                          "x": -20,
                          "y": 10
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": -40,
                      "y": -10
                    },
                    {
                      "x": -20,
                      "y": 10
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "addPID": {
      "type_specifier": "Modelica.Blocks.Math.Add3",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "addPID",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k1",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "1"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k2",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "1"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k3",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "1"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "description": {
          "description_string": "Adder for the gains",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": 0,
                          "y": -10
                        },
                        {
                          "x": 20,
                          "y": 10
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": 0,
                      "y": -10
                    },
                    {
                      "x": 20,
                      "y": 10
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "unitTime": {
      "type_prefix": "constant",
      "type_specifier": "Modelica.Units.SI.Time",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "unitTime",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "1"
            }
          }
        },
        "description": {
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "HideResult",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "HideResult",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "revAct": {
      "type_prefix": "parameter",
      "type_specifier": "Real",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "revAct",
          "modification": {
            "equal": true,
            "expression": {
              "if_expression": {
                "if_elseif": [
                  {
                    "condition": {
                      "simple_expression": "reverseActing"
                    },
                    "then": {
                      "simple_expression": "1"
                    }
                  }
                ],
                "else_expression": {
                  "simple_expression": "-1"
                }
              }
            }
          }
        },
        "description": {
          "description_string": "Switch for sign for reverse or direct acting controller"
        }
      },
      "annotation": null,
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "with_I": {
      "type_prefix": "parameter",
      "type_specifier": "Boolean",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "with_I",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": {
                "logical_expression": {
                  "logical_or": [
                    {
                      "logical_and": [
                        {
                          "arithmetic_expressions": [
                            {
                              "name": "controllerType"
                            },
                            {
                              "name": "Modelica.Blocks.Types.SimpleController.PI"
                            }
                          ],
                          "relation_operator": "=="
                        }
                      ]
                    },
                    {
                      "logical_and": [
                        {
                          "arithmetic_expressions": [
                            {
                              "name": "controllerType"
                            },
                            {
                              "name": "Modelica.Blocks.Types.SimpleController.PID"
                            }
                          ],
                          "relation_operator": "=="
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "description": {
          "description_string": "Boolean flag to enable integral action",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Evaluate",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "HideResult",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Evaluate",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "HideResult",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "with_D": {
      "type_prefix": "parameter",
      "type_specifier": "Boolean",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "with_D",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": {
                "logical_expression": {
                  "logical_or": [
                    {
                      "logical_and": [
                        {
                          "arithmetic_expressions": [
                            {
                              "name": "controllerType"
                            },
                            {
                              "name": "Modelica.Blocks.Types.SimpleController.PD"
                            }
                          ],
                          "relation_operator": "=="
                        }
                      ]
                    },
                    {
                      "logical_and": [
                        {
                          "arithmetic_expressions": [
                            {
                              "name": "controllerType"
                            },
                            {
                              "name": "Modelica.Blocks.Types.SimpleController.PID"
                            }
                          ],
                          "relation_operator": "=="
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "description": {
          "description_string": "Boolean flag to enable derivative action",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Evaluate",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "HideResult",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Evaluate",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "HideResult",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "Dzero": {
      "type_specifier": "Modelica.Blocks.Sources.Constant",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "Dzero",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "0"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "condition_attribute": {
          "expression": {
            "simple_expression": "not with_D"
          }
        },
        "description": {
          "description_string": "Zero input signal",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Evaluate",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "HideResult",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": -30,
                          "y": 20
                        },
                        {
                          "x": -20,
                          "y": 30
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Evaluate",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "HideResult",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": -30,
                      "y": 20
                    },
                    {
                      "x": -20,
                      "y": 30
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "Izero": {
      "type_specifier": "Modelica.Blocks.Sources.Constant",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "Izero",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "0"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "condition_attribute": {
          "expression": {
            "simple_expression": "not with_I"
          }
        },
        "description": {
          "description_string": "Zero input signal",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Evaluate",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "HideResult",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": 10,
                          "y": -55
                        },
                        {
                          "x": 0,
                          "y": -45
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Evaluate",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "HideResult",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": 10,
                      "y": -55
                    },
                    {
                      "x": 0,
                      "y": -45
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "y_reset_internal": {
      "type_specifier": "Modelica.Blocks.Interfaces.RealInput",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "y_reset_internal"
        },
        "description": {
          "description_string": "Internal connector for controller output reset",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Evaluate",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Evaluate",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "addI": {
      "type_specifier": "Modelica.Blocks.Math.Add3",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "addI",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k1",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "revAct"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k2",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "-revAct"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "condition_attribute": {
          "expression": {
            "simple_expression": "with_I"
          }
        },
        "description": {
          "description_string": "Adder for I gain",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": -80,
                          "y": -60
                        },
                        {
                          "x": -60,
                          "y": -40
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": -80,
                      "y": -60
                    },
                    {
                      "x": -60,
                      "y": -40
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "addSat": {
      "type_specifier": "Modelica.Blocks.Math.Add",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "addSat",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k1",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "+1"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k2",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "-1"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "condition_attribute": {
          "expression": {
            "simple_expression": "with_I"
          }
        },
        "description": {
          "description_string": "Adder for integrator feedback",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "origin": {
                        "x": 80,
                        "y": -50
                      },
                      "extent": [
                        {
                          "x": -10,
                          "y": -10
                        },
                        {
                          "x": 10,
                          "y": 10
                        }
                      ],
                      "rotation": 270
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "origin": {
                    "x": 80,
                    "y": -50
                  },
                  "extent": [
                    {
                      "x": -10,
                      "y": -10
                    },
                    {
                      "x": 10,
                      "y": 10
                    }
                  ],
                  "rotation": 270
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "gainPID": {
      "type_specifier": "Modelica.Blocks.Math.Gain",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "gainPID",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "k",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "k"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "description": {
          "description_string": "Multiplier for control gain",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": 30,
                          "y": -10
                        },
                        {
                          "x": 50,
                          "y": 10
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": 30,
                      "y": -10
                    },
                    {
                      "x": 50,
                      "y": 10
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "gainTrack": {
      "type_specifier": "Modelica.Blocks.Math.Gain",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "gainTrack",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "k",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "1/(k*Ni)"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "condition_attribute": {
          "expression": {
            "simple_expression": "with_I"
          }
        },
        "description": {
          "description_string": "Gain for anti-windup compensation",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": 60,
                          "y": -80
                        },
                        {
                          "x": 40,
                          "y": -60
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": 60,
                      "y": -80
                    },
                    {
                      "x": 40,
                      "y": -60
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "limiter": {
      "type_specifier": "Limiter",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "limiter",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "uMax",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "yMax"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "uMin",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "yMin"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "strict",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "strict"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "description": {
          "description_string": "Output limiter",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": 70,
                          "y": -10
                        },
                        {
                          "x": 90,
                          "y": 10
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": 70,
                      "y": -10
                    },
                    {
                      "x": 90,
                      "y": 10
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "intRes": {
      "type_specifier": "Modelica.Blocks.Sources.RealExpression",
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "LimPID",
      "single_component_list": {
        "declaration": {
          "identifier": "intRes",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "y",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "y_reset_internal/k -addPID.u1 -addPID.u2"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "condition_attribute": {
          "expression": {
            "simple_expression": {
              "logical_expression": {
                "logical_or": [
                  {
                    "logical_and": [
                      {
                        "arithmetic_expressions": [
                          {
                            "name": "reset"
                          },
                          {
                            "name": "Buildings.Types.Reset.Disabled"
                          }
                        ],
                        "relation_operator": "<>"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "description": {
          "description_string": "Signal source for integrator reset",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": -80,
                          "y": -90
                        },
                        {
                          "x": -60,
                          "y": -70
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": -80,
                      "y": -90
                    },
                    {
                      "x": -60,
                      "y": -70
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo"
    },
    "Limiter": {
      "within": "Buildings.Controls.Continuous",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/Continuous/LimPID.mo",
      "classPrefixes": "block",
      "compositionSpecifier": "protected",
      "type": "long_class_specifier",
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Icon",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "coordinateSystem": {
                          "extent": [
                            {
                              "x": -100,
                              "y": -100
                            },
                            {
                              "x": 100,
                              "y": 100
                            }
                          ],
                          "preserveAspectRatio": "true"
                        }
                      }
                    }
                  },
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "graphics": [
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": 0,
                                  "y": -90
                                },
                                {
                                  "x": 0,
                                  "y": 68
                                }
                              ],
                              "color": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              }
                            }
                          },
                          {
                            "name": "Polygon",
                            "attribute": {
                              "points": [
                                {
                                  "x": 0,
                                  "y": 90
                                },
                                {
                                  "x": -8,
                                  "y": 68
                                },
                                {
                                  "x": 8,
                                  "y": 68
                                },
                                {
                                  "x": 0,
                                  "y": 90
                                }
                              ],
                              "lineColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -90,
                                  "y": 0
                                },
                                {
                                  "x": 68,
                                  "y": 0
                                }
                              ],
                              "color": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              }
                            }
                          },
                          {
                            "name": "Polygon",
                            "attribute": {
                              "points": [
                                {
                                  "x": 90,
                                  "y": 0
                                },
                                {
                                  "x": 68,
                                  "y": -8
                                },
                                {
                                  "x": 68,
                                  "y": 8
                                },
                                {
                                  "x": 90,
                                  "y": 0
                                }
                              ],
                              "lineColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -80,
                                  "y": -70
                                },
                                {
                                  "x": -50,
                                  "y": -70
                                },
                                {
                                  "x": 50,
                                  "y": 70
                                },
                                {
                                  "x": 80,
                                  "y": 70
                                }
                              ]
                            }
                          },
                          {
                            "name": "Text",
                            "attribute": {
                              "extent": [
                                {
                                  "x": -150,
                                  "y": -150
                                },
                                {
                                  "x": 150,
                                  "y": -110
                                }
                              ],
                              "textString": ",textString="
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": 50,
                                  "y": 70
                                },
                                {
                                  "x": 80,
                                  "y": 70
                                }
                              ],
                              "color": {
                                "r": 255,
                                "g": 0,
                                "b": 0
                              },
                              "visible": "strict"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -80,
                                  "y": -70
                                },
                                {
                                  "x": -50,
                                  "y": -70
                                }
                              ],
                              "color": {
                                "r": 255,
                                "g": 0,
                                "b": 0
                              },
                              "visible": "strict"
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Diagram",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "coordinateSystem": {
                          "extent": [
                            {
                              "x": -100,
                              "y": -100
                            },
                            {
                              "x": 100,
                              "y": 100
                            }
                          ],
                          "preserveAspectRatio": "true"
                        }
                      }
                    }
                  },
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "graphics": [
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": 0,
                                  "y": -60
                                },
                                {
                                  "x": 0,
                                  "y": 50
                                }
                              ],
                              "color": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              }
                            }
                          },
                          {
                            "name": "Polygon",
                            "attribute": {
                              "points": [
                                {
                                  "x": 0,
                                  "y": 60
                                },
                                {
                                  "x": -5,
                                  "y": 50
                                },
                                {
                                  "x": 5,
                                  "y": 50
                                },
                                {
                                  "x": 0,
                                  "y": 60
                                }
                              ],
                              "lineColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -60,
                                  "y": 0
                                },
                                {
                                  "x": 50,
                                  "y": 0
                                }
                              ],
                              "color": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              }
                            }
                          },
                          {
                            "name": "Polygon",
                            "attribute": {
                              "points": [
                                {
                                  "x": 60,
                                  "y": 0
                                },
                                {
                                  "x": 50,
                                  "y": -5
                                },
                                {
                                  "x": 50,
                                  "y": 5
                                },
                                {
                                  "x": 60,
                                  "y": 0
                                }
                              ],
                              "lineColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillColor": {
                                "r": 192,
                                "g": 192,
                                "b": 192
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -50,
                                  "y": -40
                                },
                                {
                                  "x": -30,
                                  "y": -40
                                },
                                {
                                  "x": 30,
                                  "y": 40
                                },
                                {
                                  "x": 50,
                                  "y": 40
                                }
                              ]
                            }
                          },
                          {
                            "name": "Text",
                            "attribute": {
                              "extent": [
                                {
                                  "x": 46,
                                  "y": -6
                                },
                                {
                                  "x": 68,
                                  "y": -18
                                }
                              ],
                              "textString": "\"u\"",
                              "textColor": {
                                "r": 128,
                                "g": 128,
                                "b": 128
                              }
                            }
                          },
                          {
                            "name": "Text",
                            "attribute": {
                              "extent": [
                                {
                                  "x": -30,
                                  "y": 70
                                },
                                {
                                  "x": -5,
                                  "y": 50
                                }
                              ],
                              "textString": "\"y\"",
                              "textColor": {
                                "r": 128,
                                "g": 128,
                                "b": 128
                              }
                            }
                          },
                          {
                            "name": "Text",
                            "attribute": {
                              "extent": [
                                {
                                  "x": -58,
                                  "y": -54
                                },
                                {
                                  "x": -28,
                                  "y": -42
                                }
                              ],
                              "textString": "\"uMin\"",
                              "textColor": {
                                "r": 128,
                                "g": 128,
                                "b": 128
                              }
                            }
                          },
                          {
                            "name": "Text",
                            "attribute": {
                              "extent": [
                                {
                                  "x": 26,
                                  "y": 40
                                },
                                {
                                  "x": 66,
                                  "y": 56
                                }
                              ],
                              "textString": "\"uMax\"",
                              "textColor": {
                                "r": 128,
                                "g": 128,
                                "b": 128
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {}
    }
  },
  "requiredReferences": {
    "extends_clause": [
      {
        "name": "Modelica.Blocks.Interfaces.SVcontrol",
        "long_class_specifier_identifier": "LimPID",
        "within": "Buildings.Controls.Continuous",
        "compositionSpecifier": "public"
      }
    ],
    "connections": {
      "y_reset_in": [
        "y_reset_internal"
      ],
      "u_s": [
        "addP.u1",
        "addD.u1",
        "addI.u1"
      ],
      "addP.y": [
        "P.u"
      ],
      "addD.y": [
        "D.u"
      ],
      "addI.y": [
        "I.u"
      ],
      "P.y": [
        "addPID.u1"
      ],
      "D.y": [
        "addPID.u2"
      ],
      "I.y": [
        "addPID.u3"
      ],
      "addPID.y": [
        "gainPID.u"
      ],
      "gainPID.y": [
        "addSat.u2",
        "limiter.u"
      ],
      "limiter.y": [
        "addSat.u1",
        "y"
      ],
      "addSat.y": [
        "gainTrack.u"
      ],
      "gainTrack.y": [
        "addI.u3"
      ],
      "u_m": [
        "addP.u2",
        "addD.u2",
        "addI.u2"
      ],
      "Dzero.y": [
        "addPID.u2"
      ],
      "Izero.y": [
        "addPID.u3"
      ],
      "trigger": [
        "I.trigger"
      ],
      "intRes.y": [
        "I.y_reset_in"
      ]
    }
  }
}