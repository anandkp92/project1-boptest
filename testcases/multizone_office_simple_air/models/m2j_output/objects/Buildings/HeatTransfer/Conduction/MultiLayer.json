{
  "instances": {
    "MultiLayer": {
      "within": "Buildings.HeatTransfer.Conduction",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/HeatTransfer/Conduction/MultiLayer.mo",
      "type": "long_class_specifier",
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Icon",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "coordinateSystem": {
                          "extent": [
                            {
                              "x": -100,
                              "y": -100
                            },
                            {
                              "x": 100,
                              "y": 100
                            }
                          ],
                          "preserveAspectRatio": "true"
                        }
                      }
                    }
                  },
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "graphics": [
                          {
                            "name": "Rectangle",
                            "attribute": {
                              "extent": [
                                {
                                  "x": 0,
                                  "y": 80
                                },
                                {
                                  "x": 80,
                                  "y": -80
                                }
                              ],
                              "lineColor": {
                                "r": 175,
                                "g": 175,
                                "b": 175
                              },
                              "fillColor": {
                                "r": 175,
                                "g": 175,
                                "b": 175
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Rectangle",
                            "attribute": {
                              "extent": [
                                {
                                  "x": -80,
                                  "y": 80
                                },
                                {
                                  "x": 0,
                                  "y": -80
                                }
                              ],
                              "lineColor": {
                                "r": 175,
                                "g": 175,
                                "b": 175
                              },
                              "fillColor": {
                                "r": 215,
                                "g": 215,
                                "b": 215
                              },
                              "fillPattern": "FillPattern.Solid"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -92,
                                  "y": 0
                                },
                                {
                                  "x": 90,
                                  "y": 0
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -18,
                                  "y": -40
                                },
                                {
                                  "x": -32,
                                  "y": -40
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -12,
                                  "y": -32
                                },
                                {
                                  "x": -38,
                                  "y": -32
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -25,
                                  "y": 0
                                },
                                {
                                  "x": -25,
                                  "y": -32
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": 32,
                                  "y": -40
                                },
                                {
                                  "x": 18,
                                  "y": -40
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": 38,
                                  "y": -32
                                },
                                {
                                  "x": 12,
                                  "y": -32
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": 25,
                                  "y": 0
                                },
                                {
                                  "x": 25,
                                  "y": -32
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None"
                            }
                          },
                          {
                            "name": "Rectangle",
                            "attribute": {
                              "extent": [
                                {
                                  "x": -60,
                                  "y": 6
                                },
                                {
                                  "x": -40,
                                  "y": -6
                                }
                              ],
                              "lineColor": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "fillColor": {
                                "r": 255,
                                "g": 255,
                                "b": 255
                              },
                              "fillPattern": "FillPattern.Solid",
                              "lineThickness": 0.5
                            }
                          },
                          {
                            "name": "Rectangle",
                            "attribute": {
                              "extent": [
                                {
                                  "x": -10,
                                  "y": 6
                                },
                                {
                                  "x": 10,
                                  "y": -6
                                }
                              ],
                              "lineColor": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "fillColor": {
                                "r": 255,
                                "g": 255,
                                "b": 255
                              },
                              "fillPattern": "FillPattern.Solid",
                              "lineThickness": 0.5
                            }
                          },
                          {
                            "name": "Rectangle",
                            "attribute": {
                              "extent": [
                                {
                                  "x": 40,
                                  "y": 6
                                },
                                {
                                  "x": 60,
                                  "y": -6
                                }
                              ],
                              "lineColor": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "fillColor": {
                                "r": 255,
                                "g": 255,
                                "b": 255
                              },
                              "fillPattern": "FillPattern.Solid",
                              "lineThickness": 0.5
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": 86,
                                  "y": -40
                                },
                                {
                                  "x": 72,
                                  "y": -40
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None",
                              "visible": "stateAtSurface_b"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": 92,
                                  "y": -32
                                },
                                {
                                  "x": 66,
                                  "y": -32
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None",
                              "visible": "stateAtSurface_b"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": 79,
                                  "y": 0
                                },
                                {
                                  "x": 79,
                                  "y": -32
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None",
                              "visible": "stateAtSurface_b"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -79,
                                  "y": 0
                                },
                                {
                                  "x": -79,
                                  "y": -32
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None",
                              "visible": "stateAtSurface_a"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -66,
                                  "y": -32
                                },
                                {
                                  "x": -92,
                                  "y": -32
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None",
                              "visible": "stateAtSurface_a"
                            }
                          },
                          {
                            "name": "Line",
                            "attribute": {
                              "points": [
                                {
                                  "x": -72,
                                  "y": -40
                                },
                                {
                                  "x": -86,
                                  "y": -40
                                }
                              ],
                              "color": {
                                "r": 0,
                                "g": 0,
                                "b": 0
                              },
                              "thickness": 0.5,
                              "smooth": "Smooth.None",
                              "visible": "stateAtSurface_a"
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "defaultComponentName",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "\"heaCon\""
                }
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Documentation",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "info",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"<html>\n<p>\nThis is a model of a heat conductor with multiple material layers and energy storage.\nThe construction has at least one material layer, and each layer has\nat least one temperature node. The layers are modeled using an instance of\n<a href=\\\"modelica://Buildings.HeatTransfer.Conduction.SingleLayer\\\">\nBuildings.HeatTransfer.Conduction.SingleLayer</a>.\nSee this model for an explanation of the equations that are applied to\neach material layer.\n</p>\n<h4>Important parameters</h4>\n<p>\nThe construction material is defined by a record of the package\n<a href=\\\"modelica://Buildings.HeatTransfer.Data.OpaqueConstructions\\\">\nBuildings.HeatTransfer.Data.OpaqueConstructions</a>.\nThis record allows specifying materials that store energy, and material\nthat are a thermal conductor only with no heat storage.\nTo assign the material properties to this model, do the following:\n</p>\n<ol>\n<li>\nCreate an instance of a record of\n<a href=\\\"modelica://Buildings.HeatTransfer.Data.OpaqueConstructions\\\">\nBuildings.HeatTransfer.Data.OpaqueConstructions</a>, for example\nby dragging the record into the schematic model editor.\n</li>\n<li>\nMake sure the instance has the attribute <code>parameter</code>, which may not be\nassigned automatically when you drop the model in a graphical editor. For\nexample, an instanciation may look like\n<pre>\n parameter Data.OpaqueConstructions.Insulation100Concrete200 layers\n   \\\"Material layers of construction\\\"\n   annotation (Placement(transformation(extent={{-80,60},{-60,80}})));\n</pre>\n</li>\n<li>\nAssign the instance of the material to the instance of the heat transfer\nmodel as shown in\n<a href=\\\"modelica://Buildings.HeatTransfer.Examples.ConductorMultiLayer\\\">\nBuildings.HeatTransfer.Examples.ConductorMultiLayer</a>.\n</li>\n</ol>\n<p>\nThe parameters <code>stateAtSurface_a</code> and\n<code>stateAtSurface_b</code>\ndetermine whether there is a state variable at these surfaces,\nas described above.\nNote that if <code>stateAtSurface_a = true</code>,\nthen there is temperature state on the surface a with prescribed\nvalue, as determined by the differential equation of the heat conduction.\nHence, in this situation, it is not possible to\nconnect a temperature boundary condition such as\n<a href=\\\"modelica://Buildings.HeatTransfer.Sources.FixedTemperature\\\">\nBuildings.HeatTransfer.Sources.FixedTemperature</a> as this would\nyield to specifying the same temperature twice.\nTo avoid this, either set <code>stateAtSurface_a = false</code>,\nor place a thermal resistance\nbetween the boundary condition and the surface of this model.\nThe same applies for surface b.\nSee the examples in\n<a href=\\\"modelica://Buildings.HeatTransfer.Examples\\\">\nBuildings.HeatTransfer.Examples</a>.\n</p>\n</html>\""
                          }
                        }
                      }
                    }
                  },
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "revisions",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"<html>\n<ul>\n<li>\nOctober 16, 2017, by Michael Wetter:<br/>\nCorrected wrong result variable <code>R</code> and <code>UA</code>.\nThese variables are only used for reporting.\nAll other calculations were not affected by this error.\n</li>\n<li>\nJanuary 05, 2017, by Thierry S. Nouidui:<br/>\nRemoved parameter <code>nSta2</code>.\n</li>\n<li>\nNovember 17, 2016, by Thierry S. Nouidui:<br/>\nAdded parameter <code>nSta2</code> to avoid translation error\nin Dymola 2107. This is a work-around for a bug in Dymola\nwhich will be addressed in future releases.\n</li>\n<li>\nOctober 29, 2016, by Michael Wetter:<br/>\nAdded option to place a state at the surface.<br/>\nThis is for\n<a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/565\\\">issue 565</a>.\n</li>\n<li>\nSeptember 24, 2015 by Michael Wetter:<br/>\nSet the start value of <code>T</code>.\nThis is for\n<a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/426\\\">issue 426</a>.\n</li>\n<li>\nMarch 18, 2015, by Michael Wetter:<br/>\nReplaced <code>nLay</code> in the <code>sum()</code> of the parameter assignment\nwith <code>size(layers.material, 1)</code> to avoid incorrect results in OpenModelica.\nSee <a href=\\\"https://github.com/lbl-srg/modelica-buildings/commit/4578a3d3b80e760cc83d705963f3b17e41c1e7da#diff-9628c0eecd08caed8b30f1f993de7501L12\\\">github note</a>.\n</li>\n<li>\nMarch 13, 2015, by Michael Wetter:<br/>\nChanged assignment of <code>nLay</code> to avoid a translation error\nin OpenModelica.\n</li>\n<li>\nOctober 15, 2014, by Michael Wetter:<br/>\nChanged assignment of <code>R</code> to be in the <code>extends</code> statement\nto avoid a division by zero in OpenModelica.\n</li>\n<li>\nSeptember 9, 2014, by Michael Wetter:<br/>\nReverted change from March 1 2013 as this causes an error during model check\nin Dymola 2015 FD01 beta1.\n</li>\n<li>\nAugust 12, 2014, by Michael Wetter:<br/>\nReformulated the protected elements and the model instantiation to avoid\na warning in the OpenModelica parser.\n</li>\n<li>\nMarch 1, 2013, by Michael Wetter:<br/>\nRemoved <code>initial equation</code> section and assigned the protected parameters\n<code>_T_a_start</code> and <code>_T_b_start</code> directly to avoid a warning during\ntranslation.\n</li>\n<li>\nMarch 6 2010, by Michael Wetter:<br/>\nFirst implementation.\n</li>\n</ul>\n</html>\""
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {}
    },
    "T": {
      "type_specifier": "Modelica.Units.SI.Temperature",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "MultiLayer",
      "single_component_list": {
        "declaration": {
          "identifier": "T",
          "array_subscripts": [
            {
              "expression": {
                "simple_expression": {
                  "function_call": {
                    "name": "sum",
                    "arguments": [
                      {
                        "name": "layers.nSta"
                      }
                    ]
                  }
                }
              }
            }
          ],
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "each": true,
                  "element_modification": {
                    "name": "nominal",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "300"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "description": {
          "description_string": "Temperature at the states"
        }
      },
      "annotation": null,
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.HeatTransfer.Conduction",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/HeatTransfer/Conduction/MultiLayer.mo"
    },
    "Q_flow": {
      "type_specifier": "Modelica.Units.SI.HeatFlowRate",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "MultiLayer",
      "single_component_list": {
        "declaration": {
          "identifier": "Q_flow",
          "array_subscripts": [
            {
              "expression": {
                "simple_expression": "sum(layers.nSta) +nLay"
              }
            }
          ]
        },
        "description": {
          "description_string": "Heat flow rate from state i to i+1"
        }
      },
      "annotation": null,
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.HeatTransfer.Conduction",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/HeatTransfer/Conduction/MultiLayer.mo"
    },
    "stateAtSurface_a": {
      "type_prefix": "parameter",
      "type_specifier": "Boolean",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "MultiLayer",
      "single_component_list": {
        "declaration": {
          "identifier": "stateAtSurface_a",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "true"
            }
          }
        },
        "description": {
          "description_string": "=true, a state will be at the surface a",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "tab",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "\"Dynamics\""
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Evaluate",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "tab",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"Dynamics\""
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Evaluate",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.HeatTransfer.Conduction",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/HeatTransfer/Conduction/MultiLayer.mo"
    },
    "stateAtSurface_b": {
      "type_prefix": "parameter",
      "type_specifier": "Boolean",
      "type": "element",
      "compositionSpecifier": "public",
      "long_class_specifier_identifier": "MultiLayer",
      "single_component_list": {
        "declaration": {
          "identifier": "stateAtSurface_b",
          "modification": {
            "equal": true,
            "expression": {
              "simple_expression": "true"
            }
          }
        },
        "description": {
          "description_string": "=true, a state will be at the surface b",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Dialog",
                  "modification": {
                    "class_modification": [
                      {
                        "element_modification_or_replaceable": {
                          "element_modification": {
                            "name": "tab",
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": "\"Dynamics\""
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "name": "Evaluate",
                  "modification": {
                    "equal": true,
                    "expression": {
                      "simple_expression": "true"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Dialog",
              "modification": {
                "class_modification": [
                  {
                    "element_modification_or_replaceable": {
                      "element_modification": {
                        "name": "tab",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "\"Dynamics\""
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "name": "Evaluate",
              "modification": {
                "equal": true,
                "expression": {
                  "simple_expression": "true"
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.HeatTransfer.Conduction",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/HeatTransfer/Conduction/MultiLayer.mo"
    },
    "lay": {
      "type_specifier": "Buildings.HeatTransfer.Conduction.SingleLayer",
      "array_subscripts": [
        {
          "expression": {
            "simple_expression": "nLay"
          }
        }
      ],
      "type": "element",
      "compositionSpecifier": "protected",
      "long_class_specifier_identifier": "MultiLayer",
      "single_component_list": {
        "declaration": {
          "identifier": "lay",
          "modification": {
            "class_modification": [
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "nSta2",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": {
                          "for_loop": {
                            "expression": {
                              "simple_expression": "layers.nSta[i]"
                            },
                            "for_loop": [
                              {
                                "name": "i",
                                "range": "1:nLay"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "each": true,
                  "final": true,
                  "element_modification": {
                    "name": "A",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "A"
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "stateAtSurface_a",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": {
                          "for_loop": {
                            "expression": {
                              "if_expression": {
                                "if_elseif": [
                                  {
                                    "condition": {
                                      "simple_expression": {
                                        "logical_expression": {
                                          "logical_or": [
                                            {
                                              "logical_and": [
                                                {
                                                  "arithmetic_expressions": [
                                                    {
                                                      "name": "i"
                                                    },
                                                    {
                                                      "name": "1"
                                                    }
                                                  ],
                                                  "relation_operator": "=="
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "then": {
                                      "simple_expression": "stateAtSurface_a"
                                    }
                                  }
                                ],
                                "else_expression": {
                                  "simple_expression": "false"
                                }
                              }
                            },
                            "for_loop": [
                              {
                                "name": "i",
                                "range": "1:nLay"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "final": true,
                  "element_modification": {
                    "name": "stateAtSurface_b",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": {
                          "for_loop": {
                            "expression": {
                              "if_expression": {
                                "if_elseif": [
                                  {
                                    "condition": {
                                      "simple_expression": {
                                        "logical_expression": {
                                          "logical_or": [
                                            {
                                              "logical_and": [
                                                {
                                                  "arithmetic_expressions": [
                                                    {
                                                      "name": "i"
                                                    },
                                                    {
                                                      "name": "nLay"
                                                    }
                                                  ],
                                                  "relation_operator": "=="
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "then": {
                                      "simple_expression": "stateAtSurface_b"
                                    }
                                  }
                                ],
                                "else_expression": {
                                  "simple_expression": "false"
                                }
                              }
                            },
                            "for_loop": [
                              {
                                "name": "i",
                                "range": "1:nLay"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "material",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": {
                          "for_loop": {
                            "expression": {
                              "simple_expression": "layers.material[i]"
                            },
                            "for_loop": [
                              {
                                "name": "i",
                                "range": "1:size(layers.material,1)"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "T_a_start",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": {
                          "for_loop": {
                            "expression": {
                              "simple_expression": "T_b_start +(T_a_start -T_b_start)*1/R*sum(layers.material[k].R for k in i:size(layers.material,1))"
                            },
                            "for_loop": [
                              {
                                "name": "i",
                                "range": "1:size(layers.material,1)"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "T_b_start",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": {
                          "for_loop": {
                            "expression": {
                              "simple_expression": "T_a_start +(T_b_start -T_a_start)*1/R*sum(layers.material[k].R for k in 1:i)"
                            },
                            "for_loop": [
                              {
                                "name": "i",
                                "range": "1:size(layers.material,1)"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "each": true,
                  "element_modification": {
                    "name": "steadyStateInitial",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "steadyStateInitial"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "description": {
          "description_string": "Material layer",
          "annotation": [
            {
              "element_modification_or_replaceable": {
                "element_modification": {
                  "Placement": {
                    "transformation": {
                      "extent": [
                        {
                          "x": -20,
                          "y": -10
                        },
                        {
                          "x": 0,
                          "y": 10
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "annotation": [
        {
          "element_modification_or_replaceable": {
            "element_modification": {
              "Placement": {
                "transformation": {
                  "extent": [
                    {
                      "x": -20,
                      "y": -10
                    },
                    {
                      "x": 0,
                      "y": 10
                    }
                  ]
                }
              }
            }
          }
        }
      ],
      "semantics": {},
      "cdl_annotations": {},
      "within": "Buildings.HeatTransfer.Conduction",
      "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/HeatTransfer/Conduction/MultiLayer.mo"
    }
  },
  "requiredReferences": {
    "extends_clause": [
      {
        "name": "Buildings.HeatTransfer.Conduction.BaseClasses.PartialConductor",
        "class_modification": [
          {
            "element_modification_or_replaceable": {
              "final": true,
              "element_modification": {
                "name": "R",
                "modification": {
                  "equal": true,
                  "expression": {
                    "simple_expression": {
                      "function_call": {
                        "name": "sum",
                        "arguments": [
                          {
                            "expression": {
                              "simple_expression": "lay[i].R"
                            },
                            "for_loop": [
                              {
                                "name": "i",
                                "range": "1:nLay"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "long_class_specifier_identifier": "MultiLayer",
        "within": "Buildings.HeatTransfer.Conduction",
        "compositionSpecifier": "public"
      },
      {
        "name": "Buildings.HeatTransfer.Conduction.BaseClasses.PartialConstruction",
        "long_class_specifier_identifier": "MultiLayer",
        "within": "Buildings.HeatTransfer.Conduction",
        "compositionSpecifier": "public"
      }
    ],
    "connections": {
      "port_a": [
        "lay[1].port_a"
      ],
      "lay[nLay].port_b": [
        "port_b"
      ]
    }
  }
}